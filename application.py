"""
üìù **Instructions** :
- Installez toutes les biblioth√®ques n√©cessaires en fonction des imports pr√©sents dans le code, utilisez la commande suivante :conda create -n projet python pandas numpy ..........
- Compl√©tez les sections en √©crivant votre code o√π c‚Äôest indiqu√©.
- Ajoutez des commentaires clairs pour expliquer vos choix.
- Utilisez des emoji avec windows + ;
- Interpr√©tez les r√©sultats de vos visualisations (quelques phrases).
"""

### 1. Importation des librairies et chargement des donn√©es
import os
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
import plotly.express as px
import kagglehub

# Chargement des donn√©es
#df = pd.read_csv("........ds_salaries.csv")

path = kagglehub.dataset_download("arnabchaki/data-science-salaries-2023")
print("Path to dataset files:", path)

# Lire le fichier depuis le r√©pertoire du projet

df = pd.read_csv(f"{path}\ds_salaries.csv")
print(df.head(10))  # Affichage des 10 premi√®res lignes du DataFrame


### 2. Exploration visuelle des donn√©es
#votre code 

st.title("üìä Visualisation des Salaires en Data Science")
st.markdown("Explorez les tendances des salaires √† travers diff√©rentes visualisations interactives.")

if st.checkbox("Afficher un aper√ßu des donn√©es"):
    st.write(df.head(10))

#Statistique g√©n√©rales avec describe pandas 
#votre code 

st.subheader("üìå Statistiques g√©n√©rales")
st.write(df.describe())

### 3. Distribution des salaires en France par r√¥le et niveau d'exp√©rience, uilisant px.box et st.plotly_chart
#votre code 

st.title("üìà Distribution des salaires en France")

df_France = df[df.company_location == 'FR'] # filtrage sur la France

st.subheader('Distribution des salaires en France par r√¥le')
selected_option = st.selectbox("Choisir un m√©tier", options=df_France['job_title'].unique()) # Cr√©ation du bouton permettant le filtrage sur les m√©tiers 
distri_salaire_role = px.box(df_France[df_France['job_title'] == selected_option], x='job_title', y='salary_in_usd')  # Boxplot interactif
st.plotly_chart(distri_salaire_role.update_layout(xaxis_title="M√©tiers", yaxis_title="Salaires en USD")) # Changement des noms des axes

# Interpr√©tation
st.markdown("Interpr√©tation : ")
st.markdown("Ce graphique nous permet de d√©couvrir un boxplot par m√©tiers et permet de mieux situer la fourchette salariale de celui-ci. Autrement dit, cela permet de constater la distribution des salaires au sein d'un m√™me m√©tiers.")

st.subheader("Distribution des salaires en France par niveau d'exp√©rience") 
distri_salaire_exp = px.box(df_France, x='experience_level', y='salary_in_usd', color = 'experience_level')
st.plotly_chart(distri_salaire_exp.update_layout(xaxis_title="Niveaux d'exp√©rience", yaxis_title="Salaires en USD"))  # Changement des noms des axes

# Interpr√©tation
st.markdown("Interpr√©tation : ")
st.markdown("Ce graphique nous permet de d√©couvrir un boxplot par niveau d'exp√©rience et permet de mieux situer la fourchette salariale de ceux-ci. Autrement dit, cela permet de constater la distribution des salaires au sein des diff√©rents niveaux d'exp√©riences. Il permet aussi de mettre en lumi√®re des invidus hors normes ou peut-√™tre ab√©rrants.")

### 4. Analyse des tendances de salaires :
#### Salaire moyen par cat√©gorie : en choisisant une des : ['experience_level', 'employment_type', 'job_title', 'company_location'], utilisant px.bar et st.selectbox 

st.subheader('Salaire moyen par cat√©gorie')
selected_option_bis = st.selectbox("Choisir une option", options=['experience_level', 'employment_type', 'job_title', 'company_location']) # Cr√©ation du bouton permettant le filtrage sur l'axe √† repr√©senter
tendance_salaire = px.bar(df_France.groupby(selected_option_bis)['salary_in_usd'].mean().reset_index(), x=selected_option_bis, y='salary_in_usd') 
st.plotly_chart(tendance_salaire.update_layout(yaxis_title="Salaires en USD"))

# Interpr√©tation
st.markdown("Interpr√©tation : ")
st.markdown("Ce graphique et ce filtre nous permet de constater les √©carts de salaire moyen selon son niveau d'exp√©rience, ou sa qualification, ou son m√©tier ou encore le lieu de l'entreprise.")

### 5. Corr√©lation entre variables
# S√©lectionner uniquement les colonnes num√©riques pour la corr√©lation
#votre code 

numeric_df = df.select_dtypes(include=[np.number])  # S√©lection des colonnes num√©riques uniquement

# Calcul de la matrice de corr√©lation
#votre code

matrice_corr = numeric_df.corr()

# Affichage du heatmap avec sns.heatmap
#votre code 

heatmap, ax = plt.subplots(figsize=(10, 8)) # 

sns.heatmap(matrice_corr, annot=True, cmap='coolwarm', ax=ax) # Cr√©ation de la heatmap

st.subheader("üîó Corr√©lations entre variables num√©riques")
st.pyplot(heatmap)

# Interpr√©tation
st.markdown("Interpr√©tation : ")
st.markdown("Cette heatmap repr√©sente la corr√©lation entre les diff√©rentes variables num√©riques de notre jeu de donn√©es. Elle montre que les deux variables quantitatives les plus correl√©es sont le salaire et le t√©l√©-travail.")

### 6. Analyse interactive des variations de salaire
# Une √©volution des salaires pour les 10 postes les plus courants
# count of job titles pour selectionner les postes
# calcule du salaire moyen par an
#utilisez px.line
#votre code 

st.subheader("Analyse interactive des variations de salaire")

# 10  poste les plus fr√©quents (filtrage)

top10_poste = df.groupby('job_title')['job_title'].count().sort_values(ascending=False).head(10).index
df_top10 = df[df['job_title'].isin(top10_poste)]

# Cr√©ation du graphique 
salair_moy_job_year = df_top10.groupby(['work_year', 'job_title'])['salary_in_usd'].mean().reset_index()

salaire_moy_an = px.line(salair_moy_job_year, x='work_year', y='salary_in_usd', color='job_title')

st.plotly_chart(salaire_moy_an.update_layout(xaxis_title="Ann√©e", yaxis_title="Salaires moyen en USD"))

# Interpr√©tation
st.markdown("Interpr√©tation : ")
st.markdown("Ce graphique met en √©vidence l'√©volution du salaire moyen des 10 m√©tiers de la data les plus repr√©sent√©s. Globalement, tous les m√©tiers suivent la m√™me √©volution hormis les data architect et apply scientist qui restent quasiment constant. Les research engineer connaissent un d√©clin.")

### 7. Salaire m√©dian par exp√©rience et taille d'entreprise
# utilisez median(), px.bar
#votre code 

st.subheader("Salaire m√©dian par exp√©rience et taille d'entreprise")
salair_med_exp_taille = df.groupby(['experience_level', 'company_size'])['salary_in_usd'].median().reset_index()
graph_salair_med_exp_taille = px.bar(salair_med_exp_taille, x='experience_level', y='salary_in_usd', color = 'company_size')
st.plotly_chart(graph_salair_med_exp_taille.update_layout(xaxis_title="Niveau d'exp√©rience", yaxis_title="Salaires m√©dian en USD"))

# Interpr√©tation
st.markdown("Interpr√©tation : ")
st.markdown("Ce graphique montre les salaires m√©dians en fonction du niveau d'exp√©rience et de la taille de l'entreprise. On remarque que le plus haut salaire m√©dian sont les travailleurs exp√©riment√© et qui travaille dans une entreprise de taille moyenne. Plus g√©n√©ralement, ce sont les entreprises de moyennes et grandes tailles qui payent le mieux.")

### 8. Ajout de filtres dynamiques
#Filtrer les donn√©es par salaire utilisant st.slider pour selectionner les plages 
#votre code 

plage_salaire = st.slider("Choisir une plage", value = (df['salary_in_usd'].min() , df['salary_in_usd'].max()))


### 9.  Impact du t√©l√©travail sur le salaire selon le pays

st.subheader("Impact du t√©l√©travail sur le salaire selon le pays")
teletravail_salaire_pays = df.groupby(['remote_ratio', 'company_location'])['salary_in_usd'].median().reset_index()
graph_teletravail_salaire_pays = px.bar(teletravail_salaire_pays, x='company_location', y='salary_in_usd', color = 'remote_ratio')
st.plotly_chart(graph_teletravail_salaire_pays.update_layout(xaxis_title="Pays", yaxis_title="Salaires m√©dian en USD"))

# Interpr√©tation
st.markdown("Interpr√©tation : ")
st.markdown("Ce graphique nous montre l'impact du t√©l√©-travail sur le salaire en fonction du pays. On remarque que dans nos donn√©es certains pays ne font que du t√©l√©-travail ce qui semble peu problable et remet en cause la r√©elle fiabilit√© des donn√©es.")

### 10. Filtrage avanc√© des donn√©es avec deux st.multiselect, un qui indique "S√©lectionnez le niveau d'exp√©rience" et l'autre "S√©lectionnez la taille d'entreprise"
#votre code 

nv_exp = st.multiselect("Choisir un niveau d'exp√©rience", df['experience_level'].unique(), default=df['experience_level'].unique())

taille_entreprise = st.multiselect("Choisir une taille d'entreprise", df['company_size'].unique(), default=df['company_size'].unique())